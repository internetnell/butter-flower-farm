<link rel="stylesheet" href="{{ 'theme.css' | asset_url }}">

<style>
  .product {
    margin-top: var(--space-md);
  }
  .product-price {
    background-image: url('https://cdn.shopify.com/s/files/1/0763/4495/1042/files/price-star.svg?v=1756231526');
    background-repeat: no-repeat;
    background-size: contain;
    position: absolute;
    z-index: 100;
    width: 120px;
    margin-left: var(--space-xxs);
    margin-top: var(--space-xxs);
    height: 100%;
  }
  .price {
    text-align: center;
    align-items: center;
    padding-top: 3px;
  }
  .product-image-wrapper {
    display: block;
    grid-column: 1 / span 6;
    width: 100%;
  }
  .product-image-wrapper img {
    width: 100%;
    height: auto;
  }
  .product-details-wrapper {
    grid-column: 7 / span 5;
    position: sticky;
    top: var(--space-xl);
    align-self: start;
  }

  h1 {
    margin: 0 0 var(--space-md) 0;
    font-weight: normal;
  }
  .chip-group {
    margin: 0 0 var(--space-sm) 0;
  }
  .chip input[type='radio'] {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }

  .chip {
    display: inline-block;
    font-family: var(--font-body);
    font-size: var(--font-size-body);
    cursor: pointer;
    user-select: none;
    padding: var(--space-xs) var(--space-xxs) var(--space-xs) 0;

  }
  .chip span {
    border: 1px dashed var(--color-contrast);
    border-radius: 999px;
    text-align: center;
    padding: var(--space-xxs) var(--space-xs) 6 var(--space-xs);
  }
  .chip input[type='radio']:checked + span {
    border: 1px solid var(--color-contrast);
    background-color: var(--color-bg);
  }
  .button {
    margin-top: var(--space-sm);
  }

  /* --- Mobile --- */
  @media (max-width: 768px) {
    .product {
      padding: 0;
    }
    .product-image-wrapper {
      grid-column: 1 / -1;
      top: 0;
      height: 60vh; /* Occupies 60% of viewport height on mobile */
      overflow-y: auto; /* Scrollable image area */
    }
    .product-image-wrapper img {
      width: 100%;
      display: block;
    }
    .product-details-wrapper {
      grid-column: 1 / -1;
      position: static;
      padding: 16px;
    }
    .product-details {
      padding-left: 0;
      padding-top: var(--space-sm);
    }
  }
</style>

<main>
  <div class="container product">
    <div class="product-price">
      <h2 id="product-price" class="price subtitle">
        {{ product.price | money_without_trailing_zeros }}
      </h2>
    </div>

    <div class="product-image-wrapper">
      {% for image in product.images %}
        <img
          class="product-image"
          src="{{ image | img_url: '800x800' }}"
          alt="{{ product.title }} - image {{ forloop.index }}"
        >
      {% endfor %}
    </div>

    <div class="product-details-wrapper">
      <h1 class="title">{{ product.title }}</h1>

      <form action="/cart/add" method="post" id="product-form">
        <input type="hidden" name="id" id="product-variant-id" value="{{ product.variants.first.id }}">

        <div class="chip-group">
          {% for option in product.options_with_values %}
            {% if option.name == 'Size' %}
              <div class="size-selector">
                {% for value in option.values %}
                  <label class="chip">
                    <input type="radio" name="Size" value="{{ value }}">
                    <span>{{ value }}</span>
                  </label>
                {% endfor %}
              </div>
            {% endif %}
          {% endfor %}
        </div>

        <div>
          <p class="body">
            {{ product.description | newline_to_br }}
          </p>
        </div>

        <button type="submit" class="button">Add to Cart</button>
      </form>
    </div>
  </div>

  {% section 'product-meta-row' %}

  {% section 'footer' %}
</main>

<script>
  const productVariants = {{ product.variants | json }};
  const variantInput = document.getElementById('product-variant-id');
  const priceElement = document.getElementById('product-price');

  document.querySelectorAll('input[name="Size"]').forEach(radio => {
    radio.addEventListener('change', (e) => {
      const selectedSize = e.target.value;

      // Find the variant that matches the selected size
      const matchingVariant = productVariants.find(v => v.option1 === selectedSize); // adjust if Size is option2/3
      if (matchingVariant) {
        // Update hidden input for add-to-cart
        variantInput.value = matchingVariant.id;

        // Update price display (remove trailing zeros)
        let formattedPrice = new Intl.NumberFormat('{{ shop.currency }}', {
          style: 'currency',
          currency: '{{ shop.currency }}',
          minimumFractionDigits: 0,
          maximumFractionDigits: 2
        }).format(matchingVariant.price / 100);
        priceElement.textContent = formattedPrice;
      }
    });
  });
</script>
